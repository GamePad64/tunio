[package]
name = "tunio"
version = "0.4.0"
edition.workspace = true
license.workspace = true
repository.workspace = true
description = "Crate for creating and managing TUN/TAP interfaces with async support. Works best with netconfig crate."
categories.workspace = true
keywords.workspace = true
readme = "README.md"
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
log.workspace = true
futures.workspace = true
netconfig.workspace = true
derive_builder.workspace = true
delegate.workspace = true
tunio-core.workspace = true
cfg-if = "1.0.0"

[target.'cfg(target_os = "windows")'.dependencies]
tunio-wintun = { version = "0.1.0", path = "platforms/wintun" }

[target.'cfg(target_os = "linux")'.dependencies]
tunio-linux = { version = "0.1.0", path = "platforms/linux" }

[target.'cfg(target_os = "macos")'.dependencies]
tunio-utun = { version = "0.1.0", path = "platforms/utun"}

[features]
default = []
tokio = ["tunio-linux/tokio", "tunio-utun/tokio"]

[dev-dependencies]
tokio = { workspace = true, features = ["rt", "macros", "rt-multi-thread", "signal", "sync", "io-util"] }
etherparse = "0.16.0"
env_logger = "0.9.0"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace]
members = ["wintun-sys", "core", "platforms/wintun", "platforms/linux", "platforms/utun"]

[[example]]
name = "simple"
path = "examples/simple.rs"
required-features = ["tokio"]

[workspace.package]
repository = "https://github.com/GamePad64/tunio"
keywords = ["network", "networking", "cross-platform", "tun"]
license = "MIT"
categories = ["os", "network-programming"]
edition = "2021"
rust-version = "1.64"

[workspace.dependencies]
log = "0.4.17"
netconfig = "0.4.0"
futures = "0.3.21"
derive_builder = "0.11.2"
delegate = "0.8.0"
tunio-core = { version = "0.1.0", path = "core" }
nix = "0.25.0"
libc = "0.2.126"
tokio = "1.21.2"
